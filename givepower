-- Services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local localPlayer = Players.LocalPlayer -- Script executor

-- Variables for commands
local warnCommand = '/warns'
local spamWarnCommand = '/spamwarns'
local unspamCommand = '/unspam'
local givePowerCommand = '/givepower'
local removePowerCommand = '/removepower'
local cmdsCommand = '/cmds'
local silentChatCommand = '/silentchat'
local loudChatCommand = '/loudchat'
local spamboardCommand = '/spamboard'
local unspamboardCommand = '/unspamboard'

-- Variables for admin and chat control
local playersWithPower = {}
local activeSpamWarns = {}
local blacklist = {}
local maxAttempts = 4
local notificationLimit = 100
local notificationInterval = 0.1
local oldChat = false
local isSilent = false

-- Variables for message spamming
local submitNote = ReplicatedStorage:WaitForChild("SubmitNote")
local messagess = {
    "AK ADMIN is now live! Use it wisely!",
    "Experience the power of AK ADMIN!",
    "AK ADMIN: Your ultimate control tool!",
    "Stay tuned for more AK ADMIN features!",
    "AK ADMIN is ready to assist you!",
    "Join the AK ADMIN revolution!",
    "Unlock your potential with AK ADMIN!",
    "AK ADMIN: Elevate your game!",
    "Don‚Äôt forget to check out AK ADMIN!",
    "AK ADMIN is your friend in this game!",
    "Utilize AK ADMIN for enhanced gameplay!",
    "AK ADMIN: Power at your fingertips!",
    "With AK ADMIN, you hold the keys!",
    "AK ADMIN: A new era of control!",
    "Be a master with AK ADMIN!",
    "AK ADMIN is your secret weapon!",
    "AK ADMIN is taking the game by storm!",
    "Become unstoppable with AK ADMIN!",
    "AK ADMIN: The future is now!",
    "AK ADMIN for all your needs!",
    "AK ADMIN is the key to success!",
    "AK ADMIN empowers players!",
    "Don't miss out on AK ADMIN!",
    "AK ADMIN: Your path to victory!",
    "Step up your game with AK ADMIN!",
    "AK ADMIN: The choice of champions!",
    "Unlock secrets with AK ADMIN!",
    "AK ADMIN: A must-have for serious players!",
    "AK ADMIN will change how you play!",
    "Embrace the power of AK ADMIN!",
    "AK ADMIN is here to make a difference!",
    "Transform your experience with AK ADMIN!",
    "AK ADMIN: Your ally in the game!",
    "AK ADMIN: Fuel your ambition!"
}
local isSpamming = false
local spamCoroutine

-- Check if the old chat system is being used
if ReplicatedStorage:FindFirstChild('DefaultChatSystemChatEvents') then
    oldChat = true
end

-- Function to send a message
local function Chat(msg, player)
    if not isSilent then -- Check if chat is not in silent mode
        if oldChat then
            ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(msg, "All")
        else
            game:GetService("TextChatService").TextChannels.RBXGeneral:SendAsync(msg)
        end
    end
end

-- Function to find a player by partial name
local function findPlayerByPartialName(partialName)
    partialName = string.lower(partialName)
    for _, player in ipairs(Players:GetPlayers()) do
        local displayNameLower = string.lower(player.DisplayName)
        local usernameLower = string.lower(player.Name)
        if displayNameLower:sub(1, #partialName) == partialName or usernameLower:sub(1, #partialName) == partialName then
            return player
        end
    end
    return nil
end

-- Function to spam warn all players
local function spamWarnAll(player)
    while activeSpamWarns[player.Name] do
        local sentNotifications = 0
        for _, victimPlayer in ipairs(Players:GetPlayers()) do
            if not activeSpamWarns[player.Name] then return end
            if sentNotifications < notificationLimit then
                ReplicatedStorage.Notification.PlayerSelectedEvent:FireServer(victimPlayer.Name)
                sentNotifications = sentNotifications + 1
            else
                break
            end
        end
        wait(notificationInterval)
    end
end

-- Function to spam warn a specific player
local function spamWarnPlayer(player, targetPlayer)
    while activeSpamWarns[targetPlayer.Name] do
        local sentNotifications = 0
        if sentNotifications < notificationLimit then
            ReplicatedStorage.Notification.PlayerSelectedEvent:FireServer(targetPlayer.Name)
            sentNotifications = sentNotifications + 1
        end
        wait(notificationInterval)
    end
end

-- Function to track blacklist attempts
local function trackBlacklist(player)
    if not blacklist[player.Name] then
        blacklist[player.Name] = { attempts = 0, isBlacklisted = false }
    end
    local data = blacklist[player.Name]
    data.attempts = data.attempts + 1
    if data.attempts >= maxAttempts then
        data.isBlacklisted = true
        Chat("üö´ | You have been blacklisted, " .. player.DisplayName .. ".", player)
        Chat(player.DisplayName .. " has been blacklisted for unauthorized command usage.", player)
    else
        Chat("‚ùå | " .. player.DisplayName .. ", you are not authorized to use this command. Attempt " .. data.attempts .. "/" .. maxAttempts .. ".", player)
    end
end

-- Function to handle chat commands
local function onPlayerChatted(player, message)
    if blacklist[player.Name] and blacklist[player.Name].isBlacklisted then return end
    if not string.sub(message, 1, 1) == "/" then return end -- Ignore normal chat messages
    local args = message:split(" ")
    local command = string.lower(args[1])

    -- Silent chat command
    if command == string.lower(silentChatCommand) and player == localPlayer then
        isSilent = true
        Chat("üîï | Silent chat mode activated.", player)
        return

    -- Loud chat command
    elseif command == string.lower(loudChatCommand) and player == localPlayer then
        isSilent = false
        Chat("üîä | Loud chat mode activated.", player)
        return
    end

    -- Give power command (only the script executor can use)
    if command == string.lower(givePowerCommand) and player == localPlayer and args[2] then
        local targetPlayer = findPlayerByPartialName(args[2])
        if targetPlayer then
            if not playersWithPower[targetPlayer.Name] then
                playersWithPower[targetPlayer.Name] = true
                Chat("‚ú® | " .. targetPlayer.DisplayName .. " has been given power by " .. player.DisplayName .. ".", targetPlayer)
                Chat("Type '/cmds' to see your available commands.", targetPlayer)
            else
                Chat("‚ö†Ô∏è | " .. targetPlayer.DisplayName .. " already has power.", player)
            end
        else
            Chat("‚ùå | Player not found: " .. args[2], player)
        end

    -- Remove power command (only the script executor can use)
    elseif command == string.lower(removePowerCommand) and player == localPlayer and args[2] then
        local targetPlayer = findPlayerByPartialName(args[2])
        if targetPlayer then
            if playersWithPower[targetPlayer.Name] then
                playersWithPower[targetPlayer.Name] = nil
                Chat("‚ö° | " .. targetPlayer.DisplayName .. " has had their power removed by " .. player.DisplayName .. ".", targetPlayer)
            else
                Chat("‚ùå | " .. targetPlayer.DisplayName .. " does not have power.", player)
            end
        else
            Chat("‚ùå | Player not found: " .. args[2], player)
        end

    -- Warn command
    elseif command == string.lower(warnCommand) then
        if playersWithPower[player.Name] then
            if args[2] == "all" then
                for _, victimPlayer in ipairs(Players:GetPlayers()) do
                    ReplicatedStorage.Notification.PlayerSelectedEvent:FireServer(victimPlayer.Name)
                end
                Chat("‚ö†Ô∏è | You warned everyone in the server.", player)
            elseif args[2] then
                local victimPlayer = findPlayerByPartialName(args[2])
                if victimPlayer then
                    ReplicatedStorage.Notification.PlayerSelectedEvent:FireServer(victimPlayer.Name)
                    Chat("‚ö†Ô∏è | You warned " .. victimPlayer.DisplayName .. ".", player)
                else
                    Chat("‚ùå | Player not found: " .. args[2], player)
                end
            else
                Chat("‚ö†Ô∏è | Specify a player to warn or use '/warns all' to warn everyone.", player)
            end
        else
            trackBlacklist(player)
        end

    -- Spam warn command
    elseif command == string.lower(spamWarnCommand) then
        if playersWithPower[player.Name] then
            if args[2] == "all" then
                if not activeSpamWarns[player.Name] then
                    activeSpamWarns[player.Name] = true
                    Chat("‚ö° | You are now spam-warning all players.", player)
                    spamWarnAll(player)
                else
                    Chat("‚ö†Ô∏è | You are already spam-warning all players.", player)
                end
            elseif args[2] then
                local targetPlayer = findPlayerByPartialName(args[2])
                if targetPlayer then
                    if not activeSpamWarns[targetPlayer.Name] then
                        activeSpamWarns[targetPlayer.Name] = true
                        Chat("‚ö° | You are now spam-warning " .. targetPlayer.DisplayName .. ".", player)
                        spamWarnPlayer(player, targetPlayer)
                    else
                        Chat("‚ö†Ô∏è | " .. targetPlayer.DisplayName .. " is already being spam-warned.", player)
                    end
                else
                    Chat("‚ùå | Player not found: " .. args[2], player)
                end
            end
        else
            trackBlacklist(player)
        end

    -- Unspam command
    elseif command == string.lower(unspamCommand) then
        if playersWithPower[player.Name] then
            if args[2] then
                local targetPlayer = findPlayerByPartialName(args[2])
                if targetPlayer and activeSpamWarns[targetPlayer.Name] then
                    activeSpamWarns[targetPlayer.Name] = false
                    Chat("‚õî | You have stopped spam-warnings for " .. targetPlayer.DisplayName .. ".", player)
                else
                    Chat("‚ùå |  " .. (targetPlayer and targetPlayer.DisplayName or "Player not found: " .. args[2]), player)
                end
            else
                activeSpamWarns[player.Name] = false
                Chat("‚õî | You have stopped all spam-warnings.", player)
            end
        else
            trackBlacklist(player)
        end

    -- Show commands for powered players
    elseif command == string.lower(cmdsCommand) then
        if playersWithPower[player.Name] then
            Chat("üìú | Your available commands: üìã /warns [player], All/ üìã /spamwarns [player], All üìã /unspam [player] üìã /unspam üìã /silentchat üìã /loudchat üìã /spamboard üìã", player)
             else
            trackBlacklist(player)
        end

    -- Spamboard command
    elseif command == string.lower(spamboardCommand) and player == localPlayer then
        if not isSpamming then
            isSpamming = true
            Chat("üåÄ | Starting the spamboard.", player)
            spamCoroutine = coroutine.create(function()

for i = 1, 10000 do
                    for _, msgg in pairs(messagess) do
                        submitNote:FireServer(msgg)
                    end
                end
            end)
            coroutine.resume(spamCoroutine)
        else
            Chat("‚ö†Ô∏è | Spamboard is already running.", player)
        end

    -- Unspamboard command
    elseif command == string.lower(unspamboardCommand) and player == localPlayer then
        if isSpamming then
            isSpamming = false
            Chat("üõë | Stopping the spamboard.", player)
        else
            Chat("‚ö†Ô∏è | Spamboard is not running.", player)
        end
    end
end

-- Listen to player chats
Players.PlayerAdded:Connect(function(player)
    player.Chatted:Connect(function(message)
        onPlayerChatted(player, message)
    end)
end)

-- Listen to local player chat (in case they are already in the game)
localPlayer.Chatted:Connect(function(message)
    onPlayerChatted(localPlayer, message)
end)

print("‚ö° Admin and Spamboard commands are ready to use.")
